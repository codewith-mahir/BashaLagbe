# Backend environment variables (copy to .env; NEVER commit real secrets)

NODE_ENV=development
PORT=5000
MONGO_URI=replace_with_your_mongodb_uri
JWT_SECRET=replace_with_long_random_secret

# Co-host frontend build
SERVE_FRONTEND=true
TRUST_PROXY=true

# Optional CORS (comma separated origins). Leave empty when co-hosted
CORS_ALLOWED_ORIGINS=

# Cloudinary (either CLOUDINARY_URL or the 3 separate values)
# CLOUDINARY_URL=cloudinary://<api_key>:<api_secret>@<cloud_name>
CLOUDINARY_CLOUD_NAME=
CLOUDINARY_API_KEY=
CLOUDINARY_API_SECRET=

# Disable in production
DEV_ADMIN_BYPASS=false
# Example environment variables for backend
# Copy to .env and fill values for local development/production

# MongoDB connection string
MONGO_URI=mongodb+srv://<username>:<password>@cluster.example.mongodb.net/<dbname>?retryWrites=true&w=majority

# JWT secret for signing tokens
JWT_SECRET=replace_this_with_a_strong_secret

# Server port
PORT=5000

# Environment: development or production
NODE_ENV=production

# CORS: comma-separated list of allowed origins in production
# Example: CORS_ALLOWED_ORIGINS=https://app.example.com,https://admin.example.com
CORS_ALLOWED_ORIGINS=

# Set to true if running behind a reverse proxy (Heroku/Nginx)
TRUST_PROXY=false

# Serve frontend build from ../frontend/build (optional co-hosting)
SERVE_FRONTEND=false

# Optional: Cloudinary (public uploads via CDN)
# Either set CLOUDINARY_URL or individual creds below
# CLOUDINARY_URL=cloudinary://<api_key>:<api_secret>@<cloud_name>
CLOUDINARY_CLOUD_NAME=
CLOUDINARY_API_KEY=
CLOUDINARY_API_SECRET=

# Development-only: allow admin header bypass for testing
# NEVER enable this in production
DEV_ADMIN_BYPASS=false
DEV_ADMIN_TOKEN=superadmin-token
